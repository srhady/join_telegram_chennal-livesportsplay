# প্রয়োজনীয় লাইব্রেরি ইম্পোর্ট করা হচ্ছে
import requests
from bs4 import BeautifulSoup
import datetime
from urllib.parse import urljoin

# টার্গেট ওয়েবসাইটের URL
WEBSITE_URL = "https://bingsport.watch/" 

# প্লেলিস্ট ফাইলের নাম
PLAYLIST_FILE = "playlist.m3u"

def get_stream_links():
    """
    এই ফাংশনটি bingsport.watch থেকে স্ট্রিম লিঙ্ক সংগ্রহ করে।
    এটি ওয়েবসাইটের iframe গুলো থেকে সোর্স লিঙ্ক খুঁজে বের করার চেষ্টা করে।
    """
    links = set() # ডুপ্লিকেট লিঙ্ক এড়ানোর জন্য set ব্যবহার করা হচ্ছে
    try:
        # ওয়েবসাইট থেকে HTML কন্টেন্ট আনা হচ্ছে
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        response = requests.get(WEBSITE_URL, headers=headers, timeout=20)
        response.raise_for_status()

        # BeautifulSoup ব্যবহার করে HTML পার্স করা হচ্ছে
        soup = BeautifulSoup(response.content, "html.parser")
        
        print("Searching for stream links in iframes...")
        for iframe in soup.find_all('iframe'):
            src = iframe.get('src')
            if src:
                full_url = urljoin(WEBSITE_URL, src)
                if 'bingsport.watch' not in full_url and full_url.startswith('http'):
                    links.add(full_url)

        if not links:
            print("No iframe links found. Searching in 'a' tags for '/live/' pattern...")
            for link_tag in soup.find_all('a'):
                href = link_tag.get('href')
                if href and '/live/' in href:
                    full_url = urljoin(WEBSITE_URL, href)
                    links.add(full_url)

        print(f"Found {len(links)} unique stream links.")
        return list(links)

    except requests.exceptions.RequestException as e:
        print(f"Error fetching the website: {e}")
        return []
    except Exception as e:
        print(f"An error occurred during scraping: {e}")
        return []

def create_playlist(links):
    """
    এই ফাংশনটি লিঙ্কগুলো ব্যবহার করে একটি .m3u প্লেলিস্ট ফাইল তৈরি করে।
    """
    if not links:
        print("No links found to create a playlist.")
        with open(PLAYLIST_FILE, "w", encoding="utf-8") as f:
            f.write("#EXTM3U\n")
            f.write(f"# Autogenerated on: {datetime.datetime.now().isoformat()}\n")
            f.write(f"# Target: {WEBSITE_URL}\n")
            f.write("# No live streams found at the moment.\n")
        return

    with open(PLAYLIST_FILE, "w", encoding="utf-8") as f:
        f.write("#EXTM3U\n")
        f.write(f"# Autogenerated on: {datetime.datetime.now().isoformat()}\n")
        f.write(f"# Target: {WEBSITE_URL}\n")
        f.write(f"# Total Links: {len(links)}\n\n")
        
        for i, link in enumerate(links):
            try:
                stream_name = link.split('/')[2].replace('www.', '')
            except:
                stream_name = f"Stream {i+1}"
            
            f.write(f"#EXTINF:-1 tvg-id=\"\" tvg-name=\"{stream_name}\" group-title=\"Live\",{stream_name}\n")
            f.write(f"{link}\n")
    
    print(f"Playlist '{PLAYLIST_FILE}' was updated successfully with {len(links)} links.")

if __name__ == "__main__":
    print(f"Starting scraper for {WEBSITE_URL}...")
    stream_links = get_stream_links()
    create_playlist(stream_links)
    print("Scraping process finished.")

